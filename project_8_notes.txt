


--------------------------------------------------------------------------------------

游릭 To-do list
- learn each pattern and like do 2 problems from that pattern
- then finish your DSA and just think about which pattern is in each

游릭 Thoughts
- should i just do brute force first? helped on #2
- i realy think its important for me to not look at solutions without AT LEAST figuring out the brute force
- don't just use for loops....use while loops
- redo minimum size subarray sum with binary search
- maybe its smart to use graph paper with coding problems
- THE DEBUGGER IN LEETCODE IS SO HELPFUL OMG
- is the map in js an ordered dictionary
- i think as long as you are doing 1-2 coding problems daily u r good
- a really big part of being good at these questions is coming up with good test cases
- you can straight up just google the grokking introductions
- you don't need to indicate dates and stuff in here cuz u can just go to ur leetcode account for thats
- you have to remember that its just an interview lol 

游릭 Info 
游리 Difference between sliding window and 2 pointers
- sliding window uses an aggregate of everything in window usually
- Sliding window algorithms can be implemented with a single pointer and a variable for window size. Typically we use all of the elements within the window for the problem (for eg - sum of all elements in the window).
- Two pointer technique is quite similar but we usually compare the value at the two pointers instead of all the elements between the pointers.
- Two pointers can also have variations like fast-slow pointer.
- They are vary similar but in sliding window u keep track of something like a sum
游리 let vs var vs const 
- var is globally scoped (on a whole window of code when not in a function)
    - when declared inside a function it is locally scoped
    - var variables can be re-declared and updated. This is a problem when you forget that you already declared a variable
    - var is hoisted to the top of your code and initialized as undefined (unless a value is asigned).
    Hoisting is a JavaScript mechanism where variables and function declarations are moved to the top of their scope before code execution.
- let is scoped within whatever brackets it is in {}
    - it is the preffered variable declaration
    - can be updated, but not re-declared
    - Just like  var, let declarations are hoisted to the top. Unlike var which is initialized as undefined, 
    the let keyword is not initialized. So if you try to use a let variable before declaration, you'll get a Reference Error.
- Variables declared with the const maintain constant values
    - const cannot be updated or redeclared
    - also work based on bracket access like let. it is also hoisted like let
    - the behavior is different when it comes to objects made with const
    - the properties of a const object can be updated
游리 in leetcode, contiguous just means in the same direction




游릭 How to
游리 convert a string to a number use parse int

游릭 Questions

游릭 Resources
游리 Nice Article
https://hackernoon.com/14-patterns-to-ace-any-coding-interview-question-c5bb3357f6ed
游리 Grokking the coding interview patterns
https://www.educative.io/courses/grokking-the-coding-interview
游리 Grokking Github (incase site ever becomes paid)
https://github.com/dipjul/Grokking-the-Coding-Interview-Patterns-for-Coding-Questions
游리 Grokking to Leetcode
https://gist.github.com/tykurtz/3548a31f673588c05c89f9ca42067bc4
游리 For some reason, this one has the intros
https://www.educative.io/courses/grokking-coding-interview-patterns-cpp/YV0pQ4Gw4w0
游리 Merge Intervals Pattern
https://emre.me/coding-patterns/merge-intervals/
https://medium.com/@timpark0807/leetcode-is-easy-the-interval-pattern-d68a7c1c841
https://www.techinterviewhandbook.org/algorithms/interval/
游리 Pretty good grokking intros
https://designgurus.org/blog/grokking-leetcode
游리 What to do when interviewer asks heap question
https://dandkim.com/js-heap-implementation/



游릭 Terminal

游릭 Issues